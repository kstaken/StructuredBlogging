<?php

/*
 * Copyright (c) 2005 PubSub Concepts, Inc.
 *
 * This program is free software; you can redistribute it and/or modify it under the terms of the 
 * GNU General Public License as published by the Free Software Foundation; either version 2 of the 
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
 * See the GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License along with this program; 
 * if not, write to the Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  
 */

require_once('admin.php');

$title = __('Structured Blogging Options');
$parent_file = 'options-general.php';

include('admin-header.php');

// make sure our options are in the database.  if not, we'll need to 
// add them before any updates, or the updates won't work.

$option_defaults = array( 	
	"sb-amazon-affiliate-code" => "",
	"sb-use-stylesheet" => "1",
	"sb-escape-xml-blocks" => "0",
	"sb-amazon-site" => "Amazon.com",
	"sb-file-upload-directory" => "",
	"sb-file-upload-url" => "/",    
	"sb-outputthis-username" => "",
	"sb-outputthis-password" => "",
);

// also build up a list for the input field; it's easier to just maintain one set in
// the array rather than have to remember to update both fields.
$option_list = "";

while( list( $k,$v ) = each( $option_defaults ))
{
    $check = $wpdb->get_results("SELECT $wpdb->options.option_id FROM $wpdb->options WHERE option_name='$k'");   
    if( null == $check ) $rslt = $wpdb->query("insert into $wpdb->options set option_name='$k', option_value='$v'");
	if( $option_list != "" ) $option_list .= ",";
	$option_list .= "'$k'";
}
$wpdb->query("delete from $wpdb->options where option_name='outputthis_target_cache'");

// for the select list
function createAmazonSelectOptions()
{
	$site = get_settings('sb-amazon-site');
	$str = "";
	
	// these sites should work with the lookup script.  we probably 
	// need to write some more logic to deal with the continental eu sites.
	$values = Array( 
		"Amazon US" => "http://xml-us.amznxslt.com",
		"Amazon UK" => "http://xml-uk.amznxslt.com",
		"Amazon Canada" => "http://xml-ca.amznxslt.com",
		"Amazon Germany" => "http://xml-de.amznxslt.com",
		"Amazon France" => "http://xml-fr.amznxslt.com",
		"Amazon Japan" => "http://xml-jp.amznxslt.com",				
		);
		
	foreach ($values as $s => $url)
	{
		$str .= sprintf( "<option value='$url'%s>$s</option>",
			$site == $url ? " selected" : "" );
		next( $values );
	}

	return $str;
}

?>
 
<div class="wrap"> 
<h2><?php _e('Structured Blogging') ?></h2> 
<form name="sb-options" method="post" action="options.php"> 
	<input type="hidden" name="action" value="update" />
	<input type="hidden" name="page_options" value="<?php _e($option_list); ?>" /> 
	<fieldset class="options">
	<legend><?php _e('Affiliate Tracking'); ?></legend>

	<p>
	If you have an Amazon.com affiliate code, you can enter it here and it
        will be added to any amazon.com links generated by the structured blogging
        plug-in.  That way, you'll get credit for any clicks on the images or links
        in product reviews you write on your blog.
	</p>
	
	<p>
		If you don't have an Amazon.com affiliate code, you can get one from 
		<a href='http://www.amazon.com/gp/browse.html?node=3435371'>the Amazon.com site</a>.
	</p>

	<table width="100%" cellspacing="2" cellpadding="5" class="editform">
		<tr valign="top">
			<th scope="row"><?php _e('Select an Amazon.com site') ?></th>
			<td><select name="sb-amazon-site">
			<?php echo createAmazonSelectOptions(); ?>
			</select></td>
		</tr>
		<tr valign="top">
			<th scope="row"><?php _e('Amazon.com affiliate code:') ?></th>
			<td><input name="sb-amazon-affiliate-code" type="text" id="sb-amazon-affiliate-code" value="<?php form_option('sb-amazon-affiliate-code'); ?>" size="20" />
			</td>
		</tr>
	</table>


	</fieldset>
	<fieldset class="options">
	<legend><?php _e('File Upload Locations'); ?></legend>

	<p> Some Structured Blogging post types allow you to upload files and images to be included in the post. For this to work you must provide
	a directory where the files can be uploaded and the URL location where that directory is accessible via the web.
	</p>
	
	<table width="100%" cellspacing="2" cellpadding="5" class="editform">
		<tr valign="top">
			<td><?php _e('File Upload Directory'); ?>:</td>
			<td><input name="sb-file-upload-directory" type="text" id="sb-file-upload-directory" value="<?php form_option('sb-file-upload-directory'); ?>" size="20" /></td>
		</tr>
		<tr valign="top">
		    <td><?php _e('URL of Upload Location'); ?>:</td>
		    <td><input name="sb-file-upload-url" type="text" id="sb-file-upload-directory" value="<?php form_option('sb-file-upload-url'); ?>" size="20" /></td>
			
			</td>
		</tr>
	</table>


	</fieldset>

	<fieldset class="options">
	<legend><?php _e('Outputthis.org Account Details'); ?></legend>

	<p> 
	    Outputthis.org allows you to automatically post your blog entries to other systems.
	</p>
	
	<table width="100%" cellspacing="2" cellpadding="5" class="editform">
		<tr valign="top">
			<td><?php _e('Username'); ?>:</td>
			<td><input name="sb-outputthis-username" type="text" id="sb-outputthis-username" value="<?php form_option('sb-outputthis-username'); ?>" size="20" /></td>
		</tr>
		<tr valign="top">
		    <td><?php _e('Password'); ?>:</td>
		    <td><input name="sb-outputthis-password" type="password" id="sb-outputthis-password" value="<?php form_option('sb-outputthis-password'); ?>" size="20" /></td>
			
			</td>
		</tr>
	</table>


	</fieldset>

	<p><input name="sb-use-stylesheet" type="checkbox" id="sb-use-stylesheet" value="1" <?php checked('1', get_settings('sb-use-stylesheet')); ?> />
	<label for="sb-use-stylesheet"><?php _e('Use Structured Blogging Stylesheet') ?></label></p>
	<p>
	Un-check this box to disable the default stylesheet, if you want to turn off styles or add styles to your default stylesheet.
	</p>

<?php 

/* not enabled yet: waiting on CDATA blocks

	<p><input name="sb-escape-xml-blocks" type="checkbox" id="sb-escape-xml-blocks" value="1" <?php checked('1', get_settings('sb-escape-xml-blocks')); ?> />
	<label for="sb-escape-xml-blocks"><?php _e('Escape XML blocks (advanced)') ?></label></p>
	<p>
	Check this box to escape embedded XML in your page output.  This will ensure XHTML compliance.
	</p>
*/

?>

	<p class="submit">
		<input type="submit" name="Submit" value="<?php _e('Update Options') ?> &raquo;" />
	</p>
</form> 
</div>

<?php include('./admin-footer.php'); ?>